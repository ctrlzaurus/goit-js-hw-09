{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,WAClCC,EAAUF,SAASC,cAAc,UACjCE,EAASH,SAASC,cAAc,SA2BtC,SAASG,EAAUC,EAAUC,GAC7BC,EAAAV,GAASW,OAAOC,QACV,uBAAqBJ,QAAiBC,MAAW,CAE/CI,QAAS,K,CAKjB,SAASC,EAAQN,EAAUC,GACzBC,EAAAV,GAASW,OAAOI,QACR,sBAAoBP,QAAeC,MAAW,CAEhDI,QAAS,K,CAMjB,SAASG,EAAcR,EAAUC,GAC/B,MAAMQ,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACPN,EACFI,EAAQ,C,SAACb,E,MAAUC,IAEnBa,EAAO,C,SAACd,E,MAAUC,GAAO,GAE1BA,EAAM,G,CAvDIN,SAASC,cAAc,SAE/BoB,iBAAiB,UAExB,SAAoBC,GAClBA,EAAEC,iBACF,MAAMC,EAASC,OAAO1B,EAAS2B,OACzBC,EAAQF,OAAOvB,EAAQwB,OACvBE,EAAOH,OAAOtB,EAAOuB,OAE3B,IAAIG,EAASF,EAEb,IAAK,IAAIG,EAAI,EAAGA,GAAKN,EAAQM,IAG3BjB,EAAciB,EAAGD,GAChBE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjBF,EAAUC,EAAUC,EAAM,IAE3B0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBK,EAAQN,EAAUC,EAAM,IAE1BuB,GAAUD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst amountEl = document.querySelector('#amount');\nconst delayEl = document.querySelector('#delay');\nconst stepEl = document.querySelector('#step');\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n  const AMOUNT = Number(amountEl.value);\n  const DELAY = Number(delayEl.value);\n  const STEP = Number(stepEl.value);\n\n  let fDelay = DELAY;\n\n  for (let i = 1; i <= AMOUNT; i++) {\n    // console.log(Number(element));\n\n    createPromise(i, fDelay)\n    .then(({ position, delay }) => {\n      onSuccess(position, delay);\n      })\n    .catch(({ position, delay }) => {\n      onError(position, delay);\n      });\n    fDelay += STEP;\n  };\n}\n\nfunction onSuccess(position, delay) {\nNotiflix.Notify.success(\n      `✅ Fulfilled promise ${position} in ${delay}ms`,\n      {\n        timeout: 2000,\n       },\n     );\n}\n\nfunction onError(position, delay) {\n  Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n        {\n        timeout: 2000,\n        },\n     );\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve({position, delay});\n    } else {\n      reject({position, delay});\n    }\n  }, delay);\n});\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$amountEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$onSuccess","position","delay","$parcel$interopDefault","Notify","success","timeout","$47d4ff9957288465$var$onError","failure","$47d4ff9957288465$var$createPromise","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","AMOUNT","Number","value","DELAY","STEP","fDelay","i","then","catch"],"version":3,"file":"03-promises.37f295ce.js.map"}